name: Deploy Converter Action

on:
  push:
    branches:
      - main
      - stage
      - develop

jobs:
  env-select:
    runs-on: ubuntu-latest
    steps:
      - name: Select an Environment
        id: env_select
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "env_name=prod" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/stage" ]; then
            echo "env_name=stage" >> $GITHUB_OUTPUT
          else
            echo "env_name=dev" >> $GITHUB_OUTPUT
          fi
    outputs:
      env_name: ${{ steps.env_select.outputs.env_name }}
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.env-select.outputs.env_name }}
    steps:
      - uses: actions/checkout@v3'
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Run npm ci
        run: npm ci
      - name: Deploy Converter Action to ${{ needs.env-select.outputs.env_name }}
        run: ./node_modules/.bin/aio app deploy
        env:
          AIO_RUNTIME_AUTH: ${{ secrets.AIO_RUNTIME_AUTH }}
          AIO_RUNTIME_NAMESPACE: ${{ secrets.AIO_RUNTIME_NAMESPACE }}
          AEM_AUTHOR_URL: ${{ vars.AEM_AUTHOR_URL }}
          OWNER: ${{ vars.OWNER }}
          REPO: ${{ vars.REPO }}
          BRANCH: ${{ github.ref_name }}
      - name: Publish Fragments
        run: npm run publish-fragments
        env:
          OWNER: ${{ vars.OWNER }}
          REPO: ${{ vars.REPO }}
          BRANCH: ${{ github.ref_name }}
